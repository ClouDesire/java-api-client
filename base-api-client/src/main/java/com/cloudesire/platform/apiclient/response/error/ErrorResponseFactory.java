package com.cloudesire.platform.apiclient.response.error;

import com.liberologico.cloudesire.common.Slugger;

import java.util.Map;

public class ErrorResponseFactory
{
    private ErrorResponseFactory()
    {
    }

    /*
     * Most common way to generate an error response: static key, error message and context
     */
    public static ErrorResponse build( String key, String error, Map<String, String> extraFields )
    {
        return new ErrorResponse( new ErrorResponseEntry( key, error, extraFields, null ) );
    }

    /*
     * Key is autogenerated from message, use only for very static or uncommon errors
     */
    public static ErrorResponse buildAutogeneratedKey( String message )
    {
        return new ErrorResponse( new ErrorResponseEntry( null, message, null, null ) );
    }

    /*
     * There is not variables to be returned in the response e.g. a fatal error
     */
    public static ErrorResponse build( String key, String error )
    {
        return new ErrorResponse( new ErrorResponseEntry( key, error, null, null ) );
    }

    /*
     * Generic exceptions, track down if reported by user via a requestId
     */
    public static ErrorResponse buildWithRequestId( String key, String error, String requestId )
    {
        return new ErrorResponse( new ErrorResponseEntry( key, error, null, requestId ) );
    }

    /*
     * Use only with generic exceptions - don't be lazy
     */
    public static ErrorResponse build( Exception ex )
    {
        return build( Slugger.slugify( ex.getClass().getSimpleName() ), ex.getMessage() );
    }

    /*
     * Use only with generic exceptions - don't be lazy
     */
    public static ErrorResponse build( Exception ex, String message )
    {
        return build( Slugger.slugify( ex.getClass().getSimpleName() ), message );
    }
}
